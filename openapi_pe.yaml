openapi: 3.0.0
info:
  title: myPrismaExpress
  description: description of myPrismaExpress
  # termsOfService: http://example.com/terms/
  # contact:
  #   name: API support
  #   email: support@example.com
  # license:
  #   name: Apache 2.0
  #   url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.0.1
# servers:
#   - url: https://dev.sample-server.com/v1
#     description: Development server
#   - url: https://stg.sample-server.com/v1
#     description: Staging server
#   - url: https://api.sample-server.com/v1
#     description: Production server
paths:
  /users:
    get:
      tags:
        - users
      summary: Get all users.
      description: Returns an array of User model
      parameters: []
      responses:
        '200':
          description: A JSON array of User model
          content:
            application/json:
              schema: 
                type: array
                items:
                  $ref: '#/components/schemas/User'
                example:
                  - id: 1
                    name: John Doe
                  - id: 2
                    name: Jane Doe
  /addUser:
    post:
      tags:
        - users
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: CREATED
  # /users/{userId}:
  #   get:
  #     tags:
  #       - users
  #     summary: Get user by ID.
  #     description: Returns a single User model
  #     parameters: 
  #       - name: userId
  #         in: path
  #         description: user id
  #         required: true
  #         schema:
  #           type: integer
  #     responses:
  #       '200':
  #         description: A single User model
  #         content:
  #           application/json:
  #             schema: 
  #               type: object
  #               items:
  #                 $ref: '#/components/schemas/User'
  #               example:
  #                 id: 1
  #                 name: John Doe
  /posts:
    get:
      tags:
        - posts
      summary: Get all posts.
      description: Returns an array of Posts model
      parameters: []
      responses:
        '200':
          description: A JSON array of Post model
          content:
            application/json:
              schema: 
                type: array
                items:
                  $ref: '#/components/schemas/Post'
                # example:
                #   - id: 1
                #     name: Apple
                #     price: 200
                #   - id: 2
                #     name: Orange
                #     price: 150
  /addPost:
    post:
      tags:
        - posts
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
      responses:
        '201':
          description: CREATED
components:
  schemas:
    User:
      type: object
      required:
        - id
        - email
        - name
      properties:
        id:
          type: integer
          format: int64
        email:
          type: string
        name:
          type: string
        posts:
          type: array
        profile:
          type: object
    Post:
      type: object
      required:
        - id
        - createdAt
        - updatedAt
        - name
        - title
        - content
        - published
        - authorId
      properties:
        id:
          type: integer
          format: int64
          example: 1
        createdAt:
          type: string
          format: date
        updatedAt:
          type: string
          format: date
        name:
          type: string
          example: Mike
        title:
          type: string
        content:
          type: string
        published:
          type: boolean
        authorId:
          type: integer
        author:
          type: object
# security: 
#   - api_key: []
# tags:
#   - name: users
#     description: Access to Users
#   - name: products
#     description: Access to Products
# externalDocs:
#   description: Find more info here
#   url: https://example.com